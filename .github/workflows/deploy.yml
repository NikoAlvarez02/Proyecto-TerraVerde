name: Deploy to VPS

on:
  push:
    branches:
      - main # o la rama que uses para desplegar

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # ----------------------------------------------------
            # Rutas cr√≠ticas
            PROJECT_ROOT="/root/Proyecto-TerraVerde/backend"
            VENV_ACTIVATE="$PROJECT_ROOT/.venv/bin/activate"
            # ----------------------------------------------------
            
            # Navegar al directorio y detener el script ante cualquier error (CR√çTICO)
            cd $PROJECT_ROOT || exit 1
            set -e 

            echo "üóëÔ∏è Limpiando y preparando el repositorio local..."
            # 1. Descartar cualquier cambio local (incluyendo archivos rastreados como el .env)
            # Esto resuelve el error "Your local changes would be overwritten"
            git reset --hard HEAD
            
            # 2. Asegurarse de estar en la rama correcta y obtener la √∫ltima versi√≥n
            git pull
            
            # 3. Limpiar archivos no rastreados (como directorios __pycache__ o logs)
            git clean -fd

            echo "üêç Verificando entorno virtual..."
            # Paso 1: CREAR EL VENV SI NO EXISTE
            if [ ! -f "$VENV_ACTIVATE" ]; then
              echo "üêç El entorno virtual (.venv) no existe. Cre√°ndolo..."
              python3 -m venv .venv 
            fi

            echo "üêç Activando entorno virtual..."
            source $VENV_ACTIVATE
            
            echo "üîß Instalando dependencias..."
            pip install -r requirements.txt

            echo "üóÉÔ∏è Aplicando migraciones..."
            python manage.py migrate --noinput

            echo "üìÅ Recolectando archivos est√°ticos..."
            python manage.py collectstatic --noinput

            echo "üîÑ Reiniciando Gunicorn..."
            systemctl restart gunicorn

            echo "‚úÖ Reinicio de Gunicorn completo"

            echo "üß± (Opcional) Reiniciando Nginx..."
            systemctl reload nginx || echo "Nginx no recargado (no es cr√≠tico)"
